{
    "contents" : "## This R script preprocesses the file federalist_papers.txt\n## http://thomas.loc.gov/home/histdox/fedpaper.txt\n## Page 5 of http://writing.mit.edu/sites/writing.mit.edu/files/Who%20Wrote%20the%20Federalist%20Papers.pdf\n\nfed.papers <- scan(\"pg1404.txt\", \"character\", sep=\"\\n\", blank.lines.skip = FALSE)\n\n\n# First pass\nessay.starts <- NULL\nfor (i in 1:length(fed.papers)) {\n  if (substr(fed.papers[i], 1, nchar(\"FEDERALIST No.\")) == \"FEDERALIST No.\") {    \n    essay.starts <- c(essay.starts, i)\n  }\n}\nessay.ends <- essay.starts - 1\nessay.ends <- essay.ends[-1]\nessay.ends <- c(essay.ends, length(fed.papers))\nessay.index <- cbind(essay.starts, essay.ends)\n\n\n\n\nn.essays <- nrow(essay.index)\n\n\nauthors <- rep(\"\", n.essays)\nnew.york.text <- \"To the People of the State of New York\"\nhas.new.york.text <- rep(0, n.essays)\n\nhas.publius <- rep(0, n.essays)\n\npossible.authors <- c(\"HAMILTON\", \"JAY\", \"MADISON\", \"HAMILTON OR MADISON\", \n                      \"MADISON, with HAMILTON\")\n\nfor (i in 1:n.essays) {\n  indices <- essay.index[i, 1] : essay.index[i, 2]\n  essay.text <- fed.papers[indices]\n  \n  for (j in 1:length(essay.text)) {\n    # given authors\n    if( is.element(essay.text[j], possible.authors) ) {\n      authors[i] <- essay.text[j]  \n    }\n    \n    # preambles\n    if(substr(essay.text[j], 1, nchar(new.york.text)) == new.york.text) {\n      has.new.york.text[i] <- 1\n    }\n    \n    # closers\n    if(length(grep(\"PUBLIUS\", essay.text[j], fixed=TRUE)) != 0) {\n      has.publius[i] <- 1\n    } \n  }  \n}\n\n\n# Clean up text\nfed.papers.list <- vector(n.essays, mode=\"list\")\nfor (i in 1:n.essays) {\n  indices <- essay.index[i, 1] : essay.index[i, 2]\n  essay.text <- fed.papers[indices]\n  \n  start.index <- 0\n  end.index <- 0\n  \n  for(j in 1:length(essay.text)) {\n    if(substr(essay.text[j], 1, nchar(new.york.text)) == new.york.text) {\n      start.index <- j + 1\n    }\n    \n    if(length(grep(\"PUBLIUS\", essay.text[j], fixed=TRUE)) != 0) {\n      end.index <- j\n    }   \n  }\n  \n  # Essay 37 was not signed\n  if(i == 37) {\n    end.index <- length(essay.text)\n  }\n  \n  # Drop PUBLIUS\n  if (substr(essay.text[end.index], 1, nchar(\"PUBLIUS\")) == \"PUBLIUS\" ) {\n    end.index <- end.index - 1\n  } \n  \n  \n  # pare down text\n  essay.text <- essay.text[start.index:end.index]\n  \n  if(essay.text[1] == \"\")\n    essay.text <- essay.text[-1]\n  if(essay.text[length(essay.text)] == \"\")\n    essay.text <- essay.text[-length(essay.text)]  \n  \n  n.paragraphs <- sum(essay.text == \"\") + 1  \n  paragraphs <- vector(n.paragraphs, mode=\"list\")\n  \n  \n  paragraph.starts <- c(1, which(essay.text == \"\") + 1)\n  paragraph.ends <- c(which(essay.text == \"\") - 1, length(essay.text))\n  \n  paragraph.ends <- paragraph.starts - 1\n  paragraph.ends <- c(paragraph.ends, length(essay.text))\n  paragraph.ends <- paragraph.ends[-1]\n  \n  for(j in 1:n.paragraphs) {\n    paragraphs[j] <- paste(essay.text[paragraph.starts[j]:paragraph.ends[j]], collapse=\"\")\n  }\n  \n  fed.papers.list[[i]] <- paragraphs\n}\n\n\n\n\nn.paragraphs <- unlist(lapply(fed.papers.list,length))\n\ndisputes <- c(18:20, 49:53, 54, 55:58, 62:63, 64)\n\nhamilton.list <- \n  c(\"HAMILTON\", \"JAY\", \"JAY\", \"JAY\", \"JAY\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"HAMILTON\", \"MADISON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"MADISON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON AND MADISON\", \n    \"HAMILTON AND MADISON\", \"HAMILTON AND MADISON\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"HAMILTON\", \"MADISON\", \"MADISON\", \"MADISON\", \"MADISON\", \n    \"MADISON\", \"MADISON\", \"MADISON\", \"MADISON\", \"MADISON\", \"MADISON\", \n    \"MADISON\", \"MADISON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"JAY\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"HAMILTON\", \"HAMILTON\")\n\n\nmadison.list <-\n  c(\"HAMILTON\", \"JAY\", \"JAY\", \"JAY\", \"JAY\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"HAMILTON\", \"MADISON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"MADISON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"MADISON\", \"MADISON\", \n    \"MADISON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"MADISON\", \n    \"MADISON\", \"MADISON\", \"MADISON\", \"MADISON\", \"MADISON\", \"MADISON\", \n    \"MADISON\", \"MADISON\", \"MADISON\", \"MADISON\", \"MADISON\", \"MADISON\", \n    \"MADISON\", \"MADISON\", \"MADISON\", \"MADISON\", \"MADISON\", \"MADISON\", \n    \"MADISON\", \"MADISON\", \"MADISON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"MADISON\", \"MADISON\", \"JAY\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \n    \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\", \"HAMILTON\"\n  )",
    "created" : 1376337780774.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2177240295",
    "id" : "A98A6D73",
    "lastKnownWriteTime" : 1376352448,
    "path" : "~/Documents/Projects/Federalist/preprocess.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}