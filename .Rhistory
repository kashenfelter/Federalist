"only", "too", "when", "though", "much", "even", "also", "therefore",
"very")
madison.freq <- madison.freq[!is.element(names(madison.freq), uninteresting.words)]
hamilton.freq <- hamilton.freq[!is.element(names(hamilton.freq), uninteresting.words)]
madison.freq[1:50]*100
hamilton.freq[1:50]*100
plot(hamilton.freq, log='xy', type='n', xlab="ith word",
ylab="word frequency")
lines(madison.freq, col="black", pch='.')
lines(hamilton.freq, col="red", pch='.')
legend("topright",
legend=c("Madison", "Hamilton"),
col=c("black", "red"),
lty=c(1,1),
bty='n')
top.hamilton.words <- names(hamilton.freq)[1:100]
top.madison.words <- names(madison.freq)[1:100]
# hamilton used but not madison
setdiff(top.hamilton.words, top.madison.words)
# madison used but not hamilton
setdiff(top.madison.words, top.hamilton.words)
uninteresting.words <-
c("the", "of", "to", "and", "in", "a", "be", "that", "it", "is", "by",
"which", "as", "on", "have", "for", "not", "this", "will", "their",
"or", "with", "are", "been", "from", "they", "may", "an", "would", "other",
"has", "its", "these", "them", "than", "so", "such", "if", "any", "at",
"into", "was", "had", "were", "who", "those", "each", "but", "upon",
"only", "too", "when", "though", "much", "even", "also", "therefore",
"very")
madison.freq <- madison.freq[!is.element(names(madison.freq), uninteresting.words)]
hamilton.freq <- hamilton.freq[!is.element(names(hamilton.freq), uninteresting.words)]
madison.freq[1:50]*100
hamilton.freq[1:50]*100
plot(hamilton.freq, log='xy', type='n', xlab="ith word",
ylab="word frequency")
lines(madison.freq, col="black", pch='.')
lines(hamilton.freq, col="red", pch='.')
legend("topright",
legend=c("Madison", "Hamilton"),
col=c("black", "red"),
lty=c(1,1),
bty='n')
top.hamilton.words <- names(hamilton.freq)[1:100]
top.madison.words <- names(madison.freq)[1:100]
# hamilton used but not madison
setdiff(top.hamilton.words, top.madison.words)
# madison used but not hamilton
setdiff(top.madison.words, top.hamilton.words)
top.hamilton.words <- names(hamilton.freq)[1:200]
top.madison.words <- names(madison.freq)[1:200]
# hamilton used but not madison
setdiff(top.hamilton.words, top.madison.words)
# madison used but not hamilton
setdiff(top.madison.words, top.hamilton.words)
hamilton.freq
top.hamilton.words <- names(hamilton.freq)[1:200]
top.madison.words <- names(madison.freq)[1:200]
# hamilton used but not madison
setdiff(top.hamilton.words, top.madison.words)
# madison used but not hamilton
setdiff(top.madison.words, top.hamilton.words)
uninteresting.words <-
c("the", "of", "to", "and", "in", "a", "be", "that", "it", "is", "by",
"which", "as", "on", "have", "for", "not", "this", "will", "their",
"or", "with", "are", "been", "from", "they", "may", "an", "would", "other",
"has", "its", "these", "them", "than", "so", "such", "if", "any", "at",
"into", "was", "had", "were", "who", "those", "each", "but", "upon",
"only", "too", "when", "though", "much", "even", "also", "therefore",
"very")
madison.freq <- madison.freq[!is.element(names(madison.freq), uninteresting.words)]
hamilton.freq <- hamilton.freq[!is.element(names(hamilton.freq), uninteresting.words)]
madison.freq[1:50]*100
hamilton.freq[1:50]*100
plot(hamilton.freq, log='xy', type='n', xlab="ith word",
ylab="word frequency")
lines(madison.freq, col="black", pch='.')
lines(hamilton.freq, col="red", pch='.')
legend("topright",
legend=c("Madison", "Hamilton"),
col=c("black", "red"),
lty=c(1,1),
bty='n')
top.hamilton.words <- names(hamilton.freq)[1:200]
top.madison.words <- names(madison.freq)[1:200]
# hamilton used but not madison
setdiff(top.hamilton.words, top.madison.words)
# madison used but not hamilton
setdiff(top.madison.words, top.hamilton.words)
n.words <- 200
top.hamilton.words <- names(hamilton.freq)[1:n.words]
top.madison.words <- names(madison.freq)[1:n.words]
# hamilton used but not madison
setdiff(top.hamilton.words, top.madison.words)
# madison used but not hamilton
setdiff(top.madison.words, top.hamilton.words)
n.words <- 50
top.hamilton.words <- names(hamilton.freq)[1:n.words]
top.madison.words <- names(madison.freq)[1:n.words]
# hamilton used but not madison
setdiff(top.hamilton.words, top.madison.words)
# madison used but not hamilton
setdiff(top.madison.words, top.hamilton.words)
n.words <- 500
top.hamilton.words <- names(hamilton.freq)[1:n.words]
top.madison.words <- names(madison.freq)[1:n.words]
# hamilton used but not madison
setdiff(top.hamilton.words, top.madison.words)
# madison used but not hamilton
setdiff(top.madison.words, top.hamilton.words)
which(names(madison.freq)=="ratification")
madison.freq[490]
madison.freq[490]*n.words.madison
n.words <- 100
top.hamilton.words <- names(hamilton.freq)[1:n.words]
top.madison.words <- names(madison.freq)[1:n.words]
# hamilton used but not madison
setdiff(top.hamilton.words, top.madison.words)
# madison used but not hamilton
setdiff(top.madison.words, top.hamilton.words)
n.words.hamilton
n.words.madison
length(madison.freq)
length(hamilton.freq)
n.words <- 4000
top.hamilton.words <- names(hamilton.freq)[1:n.words]
top.madison.words <- names(madison.freq)[1:n.words]
# hamilton used but not madison
setdiff(top.hamilton.words, top.madison.words)
# madison used but not hamilton
setdiff(top.madison.words, top.hamilton.words)
n.words <- 100
top.hamilton.words <- names(hamilton.freq)[1:n.words]
top.madison.words <- names(madison.freq)[1:n.words]
# hamilton used but not madison
setdiff(top.hamilton.words, top.madison.words)
# madison used but not hamilton
setdiff(top.madison.words, top.hamilton.words)
words.per.sentence
words.per.paragraph
i<-1
n.para <- length(fed.papers.list[[i]])
num.sent <- rep(0, n.para)
for (j in 1:n.para){
num.sent[j] <-
length(sentDetect(fed.papers.list[[i]][j], language="en"))
}
sentences.per.paragraph[[i]] <- num.sent
words.per.paragraph[[i]] <-
sapply(gregexpr("\\W+", fed.papers.list[[i]]), length)
j<-1
length(sentDetect(fed.papers.list[[i]][j], language="en"))
fed.papers.list[[i]][j]
strsplit(fed.papers.list[[i]][j], " ")
strsplit(fed.papers.list[[i]][j], " ")
j
i
i<-
1
fed.papers.list[[i]][j]
fed.papers.list[[i]][[j]
]
fed.papers.list[[i]][[j]]
strsplit(fed.papers.list[[i]][[j]], " ")
text <- gsub("[[:punct:]]", "", fed.papers.list[[i]][[j]])
text
text <- unlist(strsplit(text, " "))
text
nchar(text)
sum(nchar(text))
words.per.paragraph <- vector(length=n.essays, mode='list')
sentences.per.paragraph <- vector(length=n.essays, mode='list')
letters.per.paragraph <- vector(length=n.essays, mode='list')
for (i in 1:n.essays){
n.para <- length(fed.papers.list[[i]])
num.sent <- rep(0, n.para)
num.char <- rep(0, n.para)
for (j in 1:n.para){
num.sent[j] <-
length(sentDetect(fed.papers.list[[i]][j], language="en"))
text <- gsub("[[:punct:]]", "", fed.papers.list[[i]][[j]])
text <- unlist(strsplit(text, " "))
num.char[j] <- sum(nchar(text))
}
sentences.per.paragraph[[i]] <- num.sent
letters.per.paragraph[[i]] <- num.char
words.per.paragraph[[i]] <-
sapply(gregexpr("\\W+", fed.papers.list[[i]]), length)
}
letters.per.paragraph
letters.per.essay <- unlist(lapply(letters.per.paragraph, sum))
letters.per.word.hamilton <- NULL
for (i in 1:length(hamilton)) {
letters.per.word.hamilton <-
c(letters.per.word.hamilton,
letters.per.paragraph[[hamilton[i]]] /
words.per.paragraph[[hamilton[i]]]
)
}
letters.per.word
letters.per.word.hamilton
letters.per.paragraph
unlist(letters.per.paragraph)
letters.per.word.hamilton <- NULL
for (i in 1:length(hamilton)) {
letters.per.word.hamilton <-
c(letters.per.word.hamilton,
letters.per.paragraph[[hamilton[i]]] /
words.per.paragraph[[hamilton[i]]]
)
}
letters.per.word.madison <- NULL
for (i in 1:length(madison)) {
letters.per.word.madison <-
c(letters.per.word.madison,
letters.per.paragraph[[madison[i]]] /
words.per.paragraph[[madison[i]]]
)
}
data.1 <- letters.per.word.hamilton
data.2 <- letters.per.word.madison
title <- "Words per sentence"
hist.total <- hist(c(data.1, data.2), prob=TRUE, breaks=60)
hist.1 <- hist(data.1, probability=TRUE, breaks=hist.total$breaks)
hist.2 <- hist(data.2, prob=TRUE, breaks=hist.total$breaks)
hist(data.1,
breaks=hist.total$breaks, col='cyan',
border='cyan',
ylim=c(0,max(hist.1$density, hist.2$density)),
prob=TRUE,
xlab=title, main=title
)
hist(data.2, prob=TRUE,
breaks=hist.total$breaks, add=T)
legend("topright",
legend=c("Hamilton", "Madison"),
fill=c("cyan", "white"),
bty='n')
hist.total <- hist(c(data.1, data.2), prob=TRUE, breaks=60)
hist.1 <- hist(data.1, probability=TRUE, breaks=hist.total$breaks)
hist.2 <- hist(data.2, prob=TRUE, breaks=hist.total$breaks)
hist(data.1,
breaks=hist.total$breaks, col='cyan',
border='cyan',
ylim=c(0,max(hist.1$density, hist.2$density)),
prob=TRUE,
xlab=title, main=title
)
hist(data.2, prob=TRUE,
breaks=hist.total$breaks, add=T)
legend("topright",
legend=c("Hamilton", "Madison"),
fill=c("cyan", "white"),
bty='n')
letters.per.word.hamilton
t.test(letters.per.word.hamilton, letters.per.word.madison)
gregexpr
?gregexpr
grep("asdfasd", "a")
grep("a", "aasdf")
grep("a", "aaaaasdf")
grep("a", "aaaaasdaaaaf")
gregexpr("o", c("kjokllokkoadddo", "ooofoo", "abcde"))
length(gregexpr("o", c("kjokllokkoadddo", "ooofoo", "abcde")) )
install.packages("knitr")
install.packages("knitr")
fed.papers <- scan("pg1404.txt", "character", sep="\n", blank.lines.skip = FALSE)
rm(list=ls())
fed.papers <- scan("pg1404.txt", "character", sep="\n", blank.lines.skip = FALSE)
fed.papers
# First pass to identify starting and ending line of each essay
essay.starts <- NULL
for (i in 1:length(fed.papers)) {
if (substr(fed.papers[i], 1, nchar("FEDERALIST No.")) == "FEDERALIST No.") {
essay.starts <- c(essay.starts, i)
}
}
essay.ends <- essay.starts - 1
essay.ends <- essay.ends[-1]
essay.ends <- c(essay.ends, length(fed.papers))
essay.index <- cbind(essay.starts, essay.ends)
essay.index
indices <- essay.index[i, 1] : essay.index[i, 2]
essay.text <- fed.papers[indices]
i<-1
indices <- essay.index[i, 1] : essay.index[i, 2]
essay.text <- fed.papers[indices]
indices
essay.text
is.element(essay.text[j], possible.authors)
j
j<-1
i<-1
rm(list=ls())
# Input document: multiple line document
fed.papers <- scan("pg1404.txt", "character", sep="\n", blank.lines.skip = FALSE)
#
# First pass to identify starting and ending line of each essay
#
essay.starts <- NULL
for (i in 1:length(fed.papers)) {
if (substr(fed.papers[i], 1, nchar("FEDERALIST No.")) == "FEDERALIST No.") {
essay.starts <- c(essay.starts, i)
}
}
essay.ends <- essay.starts - 1
essay.ends <- essay.ends[-1]
essay.ends <- c(essay.ends, length(fed.papers))
essay.index <- cbind(essay.starts, essay.ends)
# 85 essays total
n.essays <- nrow(essay.index)
#
# Identify
# -Which line has "To the People of the State of New York" intro (if at all)
# -Which line has Publius Signature
# -Listed author
#
new.york.text <- "To the People of the State of New York"
has.new.york.text <- rep(0, n.essays)
has.publius <- rep(0, n.essays)
listed.authors <- rep("", n.essays)
possible.authors <- c("HAMILTON", "JAY", "MADISON", "HAMILTON OR MADISON",
"MADISON, with HAMILTON")
for (i in 1:n.essays) {
indices <- essay.index[i, 1] : essay.index[i, 2]
essay.text <- fed.papers[indices]
for (j in 1:length(essay.text)) {
# ID intro to people of NY line
if(substr(essay.text[j], 1, nchar(new.york.text)) == new.york.text) {
has.new.york.text[i] <- 1
}
# ID Publius line
if(length(grep("PUBLIUS", essay.text[j], fixed=TRUE)) != 0) {
has.publius[i] <- 1
}
# ID Listed author
if(is.element(essay.text[j], possible.authors)) {
listed.authors[i] <- essay.text[j]
}
}
}
i<-1
# Get text corresponding to that essay
indices <- essay.index[i, 1]:essay.index[i, 2]
essay.text <- fed.papers[indices]
# ID starting and ending indices of the essay
start.index <- 0
end.index <- 0
for(j in 1:length(essay.text)) {
if(substr(essay.text[j], 1, nchar(new.york.text)) == new.york.text) {
start.index <- j + 1
}
if(length(grep("PUBLIUS", essay.text[j], fixed=TRUE)) != 0) {
end.index <- j
}
}
# Essay 37 was not signed
if(i == 37) {
end.index <- length(essay.text)
}
# Drop Publius line
if (substr(essay.text[end.index], 1, nchar("PUBLIUS")) == "PUBLIUS" ) {
end.index <- end.index - 1
}
# Pare down text
essay.text <- essay.text[start.index:end.index]
# Remove all possible leading and trailing blank lines
if(essay.text[1] == "")
essay.text <- essay.text[-1]
if(essay.text[length(essay.text)] == "")
essay.text <- essay.text[-length(essay.text)]
essay.text
# Determine number of paragraphs
n.paragraphs <- sum(essay.text == "") + 1
paragraphs <- vector(n.paragraphs, mode="list")
pargraphs
paragraphs
# Determine number of paragraphs
n.paragraphs <- sum(essay.text == "") + 1
# Determine which lines start and end each paragraph
paragraph.starts <- c(1, which(essay.text == "") + 1)
paragraph.ends <- c(which(essay.text == "") - 1, length(essay.text))
paragraph.ends <- paragraph.starts - 1
paragraph.ends <- c(paragraph.ends, length(essay.text))
paragraph.ends <- paragraph.ends[-1]
paragraph.starts
paragraph.ends
#
# Cut all text
# -Prior to "To the People of the State of New York:" line
# -After Publius signature
# We leverage the fact that all 85 essays started with this intro, and all but
# essay 37 ended with the Publius signature.  Note all footnotes are therefore
# removed.
#
# We then cut up each essay into paragraphs, and store each paragraphs
# separately.  Then store in new list 'fed.papers.list'.
#
fed.papers.list <- vector(n.essays, mode="list")
for (i in 1:n.essays) {
# Get text corresponding to that essay
indices <- essay.index[i, 1]:essay.index[i, 2]
essay.text <- fed.papers[indices]
# ID starting and ending indices of the essay
start.index <- 0
end.index <- 0
for(j in 1:length(essay.text)) {
if(substr(essay.text[j], 1, nchar(new.york.text)) == new.york.text) {
start.index <- j + 1
}
if(length(grep("PUBLIUS", essay.text[j], fixed=TRUE)) != 0) {
end.index <- j
}
}
# Essay 37 was not signed
if(i == 37) {
end.index <- length(essay.text)
}
# Drop Publius line
if (substr(essay.text[end.index], 1, nchar("PUBLIUS")) == "PUBLIUS" ) {
end.index <- end.index - 1
}
# Pare down text
essay.text <- essay.text[start.index:end.index]
# Remove all possible leading and trailing blank lines
if(essay.text[1] == "")
essay.text <- essay.text[-1]
if(essay.text[length(essay.text)] == "")
essay.text <- essay.text[-length(essay.text)]
# Determine number of paragraphs
n.paragraphs <- sum(essay.text == "") + 1
# Determine which lines start and end each paragraph
paragraph.starts <- c(1, which(essay.text == "") + 1)
paragraph.ends <- c(which(essay.text == "") - 1, length(essay.text))
paragraph.ends <- paragraph.starts - 1
paragraph.ends <- c(paragraph.ends, length(essay.text))
paragraph.ends <- paragraph.ends[-1]
# Store paragraphs in a list
paragraphs <- vector(n.paragraphs, mode="list")
for(j in 1:n.paragraphs) {
paragraphs[j] <-
paste(essay.text[paragraph.starts[j]:paragraph.ends[j]], collapse=" ")
}
fed.papers.list[[i]] <- paragraphs
}
fed.papers.list
hamilton.list <-
c("HAMILTON", "JAY", "JAY", "JAY", "JAY", "HAMILTON", "HAMILTON",
"HAMILTON", "HAMILTON", "MADISON", "HAMILTON", "HAMILTON", "HAMILTON",
"MADISON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON AND MADISON",
"HAMILTON AND MADISON", "HAMILTON AND MADISON", "HAMILTON", "HAMILTON",
"HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON",
"HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON",
"HAMILTON", "HAMILTON", "MADISON", "MADISON", "MADISON", "MADISON",
"MADISON", "MADISON", "MADISON", "MADISON", "MADISON", "MADISON",
"MADISON", "MADISON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON",
"HAMILTON", "JAY", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON",
"HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON",
"HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON",
"HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON",
"HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON",
"HAMILTON", "HAMILTON", "HAMILTON")
madison.list <-
c("HAMILTON", "JAY", "JAY", "JAY", "JAY", "HAMILTON", "HAMILTON",
"HAMILTON", "HAMILTON", "MADISON", "HAMILTON", "HAMILTON", "HAMILTON",
"MADISON", "HAMILTON", "HAMILTON", "HAMILTON", "MADISON", "MADISON",
"MADISON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON",
"HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON",
"HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "MADISON",
"MADISON", "MADISON", "MADISON", "MADISON", "MADISON", "MADISON",
"MADISON", "MADISON", "MADISON", "MADISON", "MADISON", "MADISON",
"MADISON", "MADISON", "MADISON", "MADISON", "MADISON", "MADISON",
"MADISON", "MADISON", "MADISON", "HAMILTON", "HAMILTON", "HAMILTON",
"MADISON", "MADISON", "JAY", "HAMILTON", "HAMILTON", "HAMILTON",
"HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON",
"HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON",
"HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON", "HAMILTON"
)
authors <- data.frame(hamilton=hamilton.list, madison=madison.list)
which(authors$hamilton != authors$madison)
authors
authors$madison
which(as.character(authors$hamilton) != as.character(authors$madison))
yo <- which(as.character(authors$hamilton) != as.character(authors$madison))
disputed <- c(18:20, 49:53, 54, 55:58, 62:63, 64)
setdiff(yo, disputed)
setdiff(disputed, yo)
authors <- data.frame(essay=1:n.essays, hamilton=hamilton.list, madison=madison.list)
authors
undisputed <- setdiff(1:n.essays, disputed)
undisputed
authors.disputed <- authors[ddisputed, ]
authors.disputed <- authors[disputed, ]
authors.disputed
getwd()
save("federalist.RData", authors, authors.disputed)
save(file="federalist.RData", authors, authors.disputed)
disputed <- c(18:20, 49:53, 54, 55:58, 62:63, 64)
undisputed <- setdiff(1:n.essays, disputed)
authors.undisputed <- authors[undisputed, ]
authors.disputed <- authors[disputed, ]
essay.index
fed.papers <- fed.papers.list
listed.authors
authors <- data.frame(essay=1:n.essays, hamilton=hamilton.list,
madison=madison.list, listed=listed.authors)
authors
n.essays <- length(fed.papers)
save(file="federalist.RData", authors, fed.papers)
fed.papers
save(file="federalist.RData", authors, fed.papers)
load("federalist.RData")
rm(list=ls())
